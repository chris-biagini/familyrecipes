<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link rel="stylesheet" href="/style.css">
  
  <link rel="icon" type="image/svg+xml" href="/favicon.svg">
  <link rel="shortcut icon" href="/favicon.ico">
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
</head>

<body data-recipe-id="<%= id %>" data-version-hash="<%= version_hash %>">
  <nav>
    <div>
      <a href="/" class="home" title="Home (Table of Contents)">Home</a>
      <a href="/index/" class="index" title="Index of ingredients">Index</a>
      <a href="/groceries/" class="groceries" title="Printable grocery list">Groceries</a>
    </div>
    
    <div>
      <button type="button" id="scale-button">Scale</button>
      <a href="<%= id %>.txt" class="text">View as Text</a>
      <a href="#" onclick="window.print(); return false;" class="print">Print</a>
    </div>
  </nav>
  
  <main>
    <article class="recipe">
      <header>
        <h1><%= title %></h1>
        <p><%= description %></p>
      </header>

      <%- steps.each do |step| -%>
      <section>
        <h2><%= step.tldr %></h2>
        <div>
          <%- unless step.ingredients.empty? -%>
          <div class="ingredients">
            <ul>
              <%- step.ingredients.each do |ingredient| -%>
              <li<% if ingredient.quantity_value %> data-quantity-value="<%= ingredient.quantity_value %>" data-quantity-unit="<%= ingredient.quantity_unit %>"<% end %>>
                <b><%= ingredient.name %></b><% if ingredient.quantity %>, <span class="quantity"><%= ingredient.quantity%></span><% end %>
                <%- if ingredient.prep_note -%><small><%= ingredient.prep_note %></small><%- end -%>
              </li>
              <%- end -%>
            </ul>
          </div>
          <%- end -%>
          
          <%- unless step.instructions.empty? -%>
          <div class="instructions">
            <%= markdown.render(step.instructions) %>
          </div>
          <%- end -%>
        </div>
      </section>
      <%- end -%>
      
      <footer>
        <%- if footer -%>
        <%= markdown.render(footer) %>
        <%- end -%>
      </footer>
    </article>
  </main>
  <script src="script.js" defer></script>
  <script>
document.addEventListener('DOMContentLoaded', () => {
    // remember the last raw input (starts at "1" on page load)
    let lastScaleInput = '1';
  
    const btn = document.getElementById('scale-button');
    btn.addEventListener('click', () => {
      // use lastScaleInput as the prompt’s default value
      const input = prompt(
        'Scale ingredients by factor (e.g. 2 or 3/2):',
        lastScaleInput
      );
      if (!input) return;  // user cancelled or blank
  
      const factor = parseFactor(input);
      if (!(factor > 0)) {
        alert('Couldn’t parse that. Try something like "2" or "3/2".');
        return;
      }
  
      // update lastScaleInput, so we keep exactly what they typed
      lastScaleInput = input;
  
      document.querySelectorAll('li[data-quantity-value]').forEach(li => {
        const orig = parseFloat(li.dataset.quantityValue);
        const unit = li.dataset.quantityUnit || '';
        const scaled = orig * factor;
        const pretty = Number.isInteger(scaled)
                         ? scaled
                         : Math.round(scaled * 100) / 100;
  
        const span = li.querySelector('.quantity');
        if (span) {
          span.textContent = pretty + (unit ? ' ' + unit : '');
        }
      });
    });
  });
  
  function parseFactor(str) {
    str = str.trim();
    const frac = str.match(/^(\d+(?:\.\d+)?)\s*\/\s*(\d+(?:\.\d+)?)$/);
    if (frac) {
      return parseFloat(frac[1]) / parseFloat(frac[2]);
    }
    const num = parseFloat(str);
    return isNaN(num) ? NaN : num;
  }
  </script>
</body>
</html>