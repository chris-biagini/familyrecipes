<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Biagini Family Recipes: Groceries</title>
  <link rel="stylesheet" href="/style.css">
  
  <link rel="icon" type="image/svg+xml" href="/favicon.svg">
  <link rel="shortcut icon" href="/favicon.ico">
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
  
  <style>
    #grocery-list ul {
      list-style-type: disc;
      column-count: 1;
    }
    
    #grocery-list ul li {
      margin-left: 3rem;
    }
    
    #grocery-list ul li.is-needed {
      color: green;
    }
    
    #grocery-list ul li.is-staple {
      // Staples are shown by default, can be hidden via JS 
      color: red;
    }
  </style>
</head>
<body>
  <nav>
    <div>
      <a href="/" class="home" title="Home (Table of Contents)">Home</a>
      <a href="/index/" class="index" title="Index of ingredients">Index</a>
      <a href="/groceries/" class="groceries" title="Printable grocery list">Groceries</a>
    </div>
  </nav>
  
  <main>
    <header>
      <h1>Groceries</h1>
    </header>
      
    <%- grouped_recipes.each do |category, recipes| -%>
    <details id="<%= category.downcase %>">
      <summary><%= category %></summary>
      <ul>
      <%- recipes.each do |recipe| -%>
        <li>
          <input type="checkbox" id="<%= recipe.id %>" data-ingredients='<%= recipe.all_ingredient_names.to_json %>'>
          <label for="<%= recipe.id %>"><%= recipe.title %></label>
          <a href="/<%= recipe.id %>" title="Go to <%= recipe.title %> →">→</a>
        </li>
      <%- end -%>
      </ul>
    </details>
    <%- end -%>
          
    <section id="grocery-list">
      <h2>Grocery List</h2>
      
      <h3>Produce</h3>
      <ul>
        <li>Apples</li>
        <li>Bananas</li>
        <li>Onions</li>
        <li>Garlic</li>
      </ul>

      <h3>Dairy</h3>
      <ul>
        <li>Milk</li>
        <li>Butter</li>
        <li>Eggs</li>
      </ul>

      <h3>Pantry</h3>
      <ul>
        <li>Flour</li>
        <li>Baking Powder</li>
        <li>Salt</li>
      </ul>
            
      <h3>Miscellaneous</h3>
      <ul id="misc-items"></ul>
    </section>
  </main>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // grab all recipe checkboxes
    const checkboxes = document.querySelectorAll('input[type="checkbox"][data-ingredients]');
    const miscList    = document.getElementById('misc-items');
  
    // wire up change‐events
    checkboxes.forEach(cb => cb.addEventListener('change', updateGroceryList));
  
    function updateGroceryList() {
      // 1) collect all needed ingredients into a Set
      const needed = new Set();
      checkboxes.forEach(cb => {
        if (cb.checked) {
          // parse the JSON array from the parent <li>
          const arr = JSON.parse(cb.dataset.ingredients);
          arr.forEach(item => needed.add(item));
        }
      });
  
      // 2) clear any old “misc” items
      miscList.innerHTML = '';
  
      // 3) show/hide items in the static grocery list
      //    skip the “Miscellaneous” ul by using :not(#misc-items)
      document
        .querySelectorAll('#grocery-list ul:not(#misc-items) li')
        .forEach(li => {
          li.classList.remove('is-needed');
          const name = li.textContent.trim();
          if (needed.has(name)) {
            li.classList.add('is-needed');
            needed.delete(name);
          }
        });
  
      // 4) whatever’s left in needed → append under Miscellaneous
      needed.forEach(name => {
        const li = document.createElement('li');
        li.textContent = name;
        li.classList.add('is-needed');
        miscList.appendChild(li);
      });
    }
  });
</script>
</body>
</html>